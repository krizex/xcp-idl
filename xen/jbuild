(* -*- tuareg -*- *)
#require "unix"

let flags = function
  | [] -> ""
  | pkgs ->
    let cmd = "ocamlfind ocamlc -verbose" ^ (
        List.fold_left (fun acc pkg -> acc ^ " -package " ^ pkg) "" pkgs
      ) in
    let ic = Unix.open_process_in
        (cmd ^ " | grep -oEe '-ppx? (\"([^\"\\]|\\.)+\"|\\w+)'")
    in
    let rec go ic acc =
      try go ic (acc ^ " " ^ input_line ic) with End_of_file -> close_in ic; acc
    in
    go ic ""

let rewriters_ppx = ["ppx_deriving_rpc"; "ppx_sexp_conv"]

let coverage_rewriter = ""
(* (preprocess (pps)) doesn't work with camlp4 and  the other ppx derivers,
   it complains about missing rpc_of_t *)
let rewriters_ppx =
  let is_coverage = try Unix.getenv "BISECT_ENABLE" = "YES" with Not_found -> false in
  if is_coverage then "bisect_ppx" :: rewriters_ppx else rewriters_ppx


let () = Printf.ksprintf Jbuild_plugin.V1.send {|
(jbuild_version 1)

(library
 ((name xcp_xen_interface_types)
  (public_name xcp.xen.interface.types)
  (modules (xenops_types device_number))
  (flags (:standard -w -39-32 %s))
  (libraries
   (rpclib.core
    threads
    xcp))
  (wrapped false)
  %s))

(library
 ((name xcp_xen_interface)
  (public_name xcp.xen.interface)
  (modules (xenops_interface))
  (flags (:standard -w -39 %s))
  (libraries
   (rpclib.core
    threads
    xcp
    xcp.xen.interface.types))
  (wrapped false)
  %s))

(library
 ((name xcp_xen)
  (public_name xcp.xen)
  (modules (:standard \ device_number xenops_interface xenops_types))
  (flags (:standard -w -39 %s))
  (libraries
   (rpclib.core
    threads
    xcp
    xcp.xen.interface))
  (wrapped false)
  %s))
|} (flags rewriters_ppx) coverage_rewriter (flags rewriters_ppx) coverage_rewriter (flags rewriters_ppx) coverage_rewriter
